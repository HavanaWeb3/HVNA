"use strict";(()=>{var e={};e.id=912,e.ids=[912],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},92263:(e,a,r)=>{r.r(a),r.d(a,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>y,staticGenerationAsyncStorage:()=>c});var s={};r.r(s),r.d(s,{GET:()=>m,POST:()=>m});var t=r(49303),i=r(88716),n=r(60670),l=r(75571),o=r.n(l),u=r(95456);let m=o()(u.L),p=new t.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/auth/[...nextauth]/route",pathname:"/api/auth/[...nextauth]",filename:"route",bundlePath:"app/api/auth/[...nextauth]/route"},resolvedPagePath:"/Users/davidsime/hvna-ecosystem/contentlynk/src/app/api/auth/[...nextauth]/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:y}=p,x="/api/auth/[...nextauth]/route";function h(){return(0,n.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:c})}},95456:(e,a,r)=>{r.d(a,{L:()=>p});var s=r(13539),t=r(53797),i=r(8194),n=r(42023),l=r.n(n),o=r(91585);let u=o.Ry({email:o.Z_().email(),password:o.Z_().min(6)}),m=o.Ry({email:o.Z_().email(),username:o.Z_().min(3).max(20).regex(/^[a-zA-Z0-9_-]+$/,"Username can only contain letters, numbers, underscores, and hyphens"),password:o.Z_().min(6),displayName:o.Z_().optional()}),p={adapter:(0,s.N)(i._),providers:[(0,t.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"},username:{label:"Username",type:"text"},displayName:{label:"Display Name",type:"text"},isRegister:{label:"Is Register",type:"text"}},async authorize(e){if(!e?.email||!e?.password)return null;try{if("true"===e.isRegister){console.log("Registration attempt:",{email:e.email,username:e.username,displayName:e.displayName});let a=m.parse({email:e.email,username:e.username,password:e.password,displayName:e.displayName});console.log("Validation passed:",a);let r=await i._.user.findFirst({where:{OR:[{email:a.email},{username:a.username}]}});if(console.log("Existing user check:",r),r)throw console.log("User already exists:",r.email,r.username),Error("User already exists with this email or username");await l().hash(a.password,12);let s=await i._.user.create({data:{email:a.email,username:a.username,displayName:a.displayName||a.username}});return{id:s.id,email:s.email,username:s.username,displayName:s.displayName||void 0}}{let a=u.parse({email:e.email,password:e.password}),r=await i._.user.findUnique({where:{email:a.email}});if(!r)return null;return{id:r.id,email:r.email,username:r.username,displayName:r.displayName||void 0}}}catch(e){return console.error("Auth error:",e),null}}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:a})=>(a&&(e.username=a.username,e.displayName=a.displayName),e),session:async({session:e,token:a})=>(a&&(e.user.id=a.sub,e.user.username=a.username,e.user.displayName=a.displayName),e)},pages:{signIn:"/auth/signin"}}},8194:(e,a,r)=>{r.d(a,{_:()=>t});let s=require("@prisma/client"),t=globalThis.prisma??new s.PrismaClient}};var a=require("../../../../webpack-runtime.js");a.C(e);var r=e=>a(a.s=e),s=a.X(0,[276,834],()=>r(92263));module.exports=s})();